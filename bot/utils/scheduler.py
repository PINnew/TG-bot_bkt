import asyncio
from datetime import datetime, timedelta
from aiogram import Bot

from bot.database.db import get_unnotified_participants, mark_reminder_sent

REMINDER_TEXT = "–ù–∞–ø–æ–º–∏–Ω–∞–µ–º: –∑–∞–≤—Ç—Ä–∞ —Å–æ—Å—Ç–æ–∏—Ç—Å—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ¬´–ë–µ–≥, –ö–æ—Ñ–µ, –¢–∞–Ω—Ü—ã¬ª! –ñ–¥—ë–º –≤–∞—Å!"
EVENT_TIME = datetime.now() + timedelta(minutes=2)  # —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã


async def start_scheduler(bot: Bot, interval_seconds=60):
    while True:
        now = datetime.now()

        if (EVENT_TIME - now).total_seconds() <= 24 * 3600:  # –ó–∞ 24 —á–∞—Å–∞ –¥–æ —Å–æ–±—ã—Ç–∏—è
            print("‚è∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–ø—Ä–æ—à–µ–¥—à–∏—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π...")

            try:
                pool = bot.dp.pool
            except AttributeError:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—É–ª –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î.")
                await asyncio.sleep(interval_seconds)
                continue

            users_to_notify = await get_unnotified_participants(pool)

            if not users_to_notify:
                print("üì≠ –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è.")
                await asyncio.sleep(interval_seconds)
                continue

            print(f"üì¨ –ù–∞–π–¥–µ–Ω–æ {len(users_to_notify)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è.")

            for user_id in users_to_notify:
                try:
                    print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–ª—è {user_id}")
                    await bot.send_message(user_id, REMINDER_TEXT)
                    await mark_reminder_sent(pool, user_id)
                    print(f"‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {user_id}")
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

        print(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ—Ä–µ–∑ {interval_seconds // 60} –º–∏–Ω—É—Ç...")
        await asyncio.sleep(interval_seconds)